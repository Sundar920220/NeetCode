class Solution {
    public int longestConsecutive(int[] nums) {
        int n = nums.length;
        
        // Create a HashSet to store the unique elements from the array
        HashSet<Integer> hS = new HashSet<>();
        
        // Add all elements from the array to the HashSet
        for (int i = 0; i < n; i++) {
            hS.add(nums[i]);
        }
        
        // Initialize a variable to store the longest consecutive sequence length
        int ans = 0;
        
        // Iterate through the elements in the array
        for (int i = 0; i < n; i++) {
            // Check if the current element is the start of a sequence
            if (!hS.contains(nums[i] - 1)) {
                int count = 1; // Initialize the count for the current sequence
                int y = nums[i] + 1; // Initialize a variable to check the next number
                
                // Continue counting consecutive numbers in the sequence
                while (hS.contains(y)) {
                    count++;
                    y++;
                }
                
                // Update the maximum consecutive sequence length
                ans = Math.max(ans, count);
            }
        }
        
        // Return the length of the longest consecutive sequence
        return ans;
    }
}
