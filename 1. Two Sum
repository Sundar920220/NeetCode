class Solution {
    public int[] twoSum(int[] nums, int target) {
        // Create a HashMap to store the elements and their indices.
        HashMap<Integer, Integer> hM = new HashMap<>();

        // Loop through the array of numbers.
        for (int i = 0; i < nums.length; i++) {
            // Calculate the complement, which is the value needed to reach the target.
            int complement = target - nums[i];

            // Check if the complement exists in the HashMap.
            if (hM.containsKey(complement)) {
                // If it exists, return an array with the indices of the two numbers.
                return new int[]{hM.get(complement), i};
            }

            // If the complement does not exist in the HashMap, add the current number
            // and its index to the HashMap for future reference.
            hM.put(nums[i], i);
        }

        // If no valid pair is found, return null.
        return null;
    }
}
